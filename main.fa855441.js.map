{"version":3,"sources":["scripts/main.js"],"names":["document","addEventListener","table","querySelector","headers","querySelectorAll","sortDirections","Array","from","fill","forEach","header","columnIndex","column","cellIndex","rows","sort","rowA","rowB","cellA","cells","textContent","trim","replace","cellB","parseFloat","reverse","innerHTML","append"],"mappings":";AAAA,aAEA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAAAA,SAASC,iBAAiB,mBAAoB,WACtCC,IAAAA,EAAQF,SAASG,cAAc,SAC/BC,EAAUF,EAAMG,iBAAiB,MACjCC,EAAiBC,MAAMC,KAAKJ,GAASK,KAAK,GAEhDL,EAAQM,QAAQ,SAASC,EAAQC,GAC/BD,EAAOV,iBAAiB,QAAS,WAAW,IAAA,EACpCY,EAAS,KAAKC,UACdC,EAAOR,MAAMC,KAAKN,EAAMG,iBAAiB,aAE/CU,EAAKC,KAAK,SAASC,EAAMC,GACjBC,IAAAA,EAAQF,EAAKG,MAAMP,GAAQQ,YAAYC,OAC1CC,QAAQ,QAAS,IACdC,EAAQN,EAAKE,MAAMP,GAAQQ,YAAYC,OAC1CC,QAAQ,QAAS,IAEbE,OAAAA,WAAWN,GAASM,WAAWD,KAGJ,IAAhClB,EAAeM,IACjBG,EAAKW,UACLpB,EAAeM,IAAgB,GAE/BN,EAAeM,GAAe,EAGhCV,EAAMC,cAAc,SAASwB,UAAY,IACzCzB,EAAAA,EAAMC,cAAc,UAASyB,OAAUb,MAAAA,EAAAA,EAAAA","file":"main.fa855441.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\r\n\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n  const table = document.querySelector('table');\r\n  const headers = table.querySelectorAll('th');\r\n  const sortDirections = Array.from(headers).fill(0);\r\n\r\n  headers.forEach(function(header, columnIndex) {\r\n    header.addEventListener('click', function() {\r\n      const column = this.cellIndex;\r\n      const rows = Array.from(table.querySelectorAll('tbody tr'));\r\n\r\n      rows.sort(function(rowA, rowB) {\r\n        const cellA = rowA.cells[column].textContent.trim()\r\n          .replace(/[$,]/g, '');\r\n        const cellB = rowB.cells[column].textContent.trim()\r\n          .replace(/[$,]/g, '');\r\n\r\n        return parseFloat(cellA) - parseFloat(cellB);\r\n      });\r\n\r\n      if (sortDirections[columnIndex] === 1) {\r\n        rows.reverse();\r\n        sortDirections[columnIndex] = -1;\r\n      } else {\r\n        sortDirections[columnIndex] = 1;\r\n      }\r\n\r\n      table.querySelector('tbody').innerHTML = '';\r\n      table.querySelector('tbody').append(...rows);\r\n    });\r\n  });\r\n});\r\n"]}